{"ast":null,"code":"// import React, { useEffect, useState } from \"react\";\n// import Navbar from \"../components/Navbar\";\n\n// function FeedbackDashboard() {\n//   const [feedbackList, setFeedbackList] = useState([]);\n\n//   // Fetch feedback from the backend\n//   const fetchFeedback = async () => {\n//     try {\n//       const response = await fetch(\"https://localhost:7299/api/Feedback\");\n//       if (response.ok) {\n//         const data = await response.json();\n//         setFeedbackList(data);\n//       } else {\n//         console.error(\"Failed to fetch feedback\");\n//       }\n//     } catch (error) {\n//       console.error(\"Error fetching feedback:\", error);\n//     }\n//   };\n\n//   useEffect(() => {\n//     fetchFeedback(); // Fetch feedback on component mount\n//   }, []);\n\n//   return (\n//     <div className=\"container\">\n//       <Navbar />\n//       <h2 className=\"mt-4\">Feedback Dashboard</h2>\n//       <table className=\"table table-bordered mt-3\">\n//         <thead className=\"table-dark\">\n//           <tr>\n//             <th>ID</th>\n//             <th>Feedback</th>\n//           </tr>\n//         </thead>\n//         <tbody>\n//           {feedbackList.length > 0 ? (\n//             feedbackList.map((item) => (\n//               <tr key={item.feedbackId}>\n//                 <td>{item.feedbackId}</td>\n//                 <td>{item.feedback1}</td>\n//               </tr>\n//             ))\n//           ) : (\n//             <tr>\n//               <td colSpan=\"2\" className=\"text-center\">\n//                 No feedback available.\n//               </td>\n//             </tr>\n//           )}\n//         </tbody>\n//       </table>\n//     </div>\n//   );\n// }\n\n// export default FeedbackDashboard;\n//*********************************************************************************************************** */\n// import React, { useEffect, useState } from \"react\";\n// import Navbar from \"../components/Navbar\";\n\n// function FeedbackDashboard() {\n//   const [feedbackList, setFeedbackList] = useState([]);\n\n//   // Fetch feedback from the backend\n//   const fetchFeedback = async () => {\n//     try {\n//       const response = await fetch(\"https://localhost:7299/api/Feedback\");\n//       if (response.ok) {\n//         const data = await response.json();\n//         setFeedbackList(data);\n//       } else {\n//         console.error(\"Failed to fetch feedback\");\n//       }\n//     } catch (error) {\n//       console.error(\"Error fetching feedback:\", error);\n//     }\n//   };\n\n//   // Delete feedback\n//   const deleteFeedback = async (id) => {\n//     try {\n//       const response = await fetch(\n//         `https://localhost:7299/api/Feedback/${id}`,\n//         {\n//           method: \"DELETE\",\n//         }\n//       );\n//       if (response.ok) {\n//         setFeedbackList(feedbackList.filter((item) => item.feedbackId !== id));\n//       } else {\n//         console.error(\"Failed to delete feedback\");\n//       }\n//     } catch (error) {\n//       console.error(\"Error deleting feedback:\", error);\n//     }\n//   };\n\n//   useEffect(() => {\n//     fetchFeedback(); // Fetch feedback on component mount\n//   }, []);\n\n//   return (\n//     <div className=\"container\">\n//       <Navbar />\n//       <h2 className=\"mt-4\">Feedback Dashboard</h2>\n//       <table className=\"table table-bordered mt-3\">\n//         <thead className=\"table-dark\">\n//           <tr>\n//             <th>ID</th>\n//             <th>Feedback</th>\n//             <th>Actions</th>\n//           </tr>\n//         </thead>\n//         <tbody>\n//           {feedbackList.length > 0 ? (\n//             feedbackList.map((item) => (\n//               <tr key={item.feedbackId}>\n//                 <td>{item.feedbackId}</td>\n//                 <td>{item.feedback1}</td>\n//                 <td>\n//                   <button\n//                     className=\"btn btn-danger\"\n//                     onClick={() => deleteFeedback(item.feedbackId)}\n//                   >\n//                     Delete\n//                   </button>\n//                 </td>\n//               </tr>\n//             ))\n//           ) : (\n//             <tr>\n//               <td colSpan=\"3\" className=\"text-center\">\n//                 No feedback available.\n//               </td>\n//             </tr>\n//           )}\n//         </tbody>\n//       </table>\n//     </div>\n//   );\n// }\n\n// export default FeedbackDashboard;\n//************************************************************************************************************* */","map":{"version":3,"names":[],"sources":["D:/Nikhil/Downloads/CDAC Project/FarmerFrontend/src/screens/FeedbackDashboard.jsx"],"sourcesContent":["// import React, { useEffect, useState } from \"react\";\r\n// import Navbar from \"../components/Navbar\";\r\n\r\n// function FeedbackDashboard() {\r\n//   const [feedbackList, setFeedbackList] = useState([]);\r\n\r\n//   // Fetch feedback from the backend\r\n//   const fetchFeedback = async () => {\r\n//     try {\r\n//       const response = await fetch(\"https://localhost:7299/api/Feedback\");\r\n//       if (response.ok) {\r\n//         const data = await response.json();\r\n//         setFeedbackList(data);\r\n//       } else {\r\n//         console.error(\"Failed to fetch feedback\");\r\n//       }\r\n//     } catch (error) {\r\n//       console.error(\"Error fetching feedback:\", error);\r\n//     }\r\n//   };\r\n\r\n//   useEffect(() => {\r\n//     fetchFeedback(); // Fetch feedback on component mount\r\n//   }, []);\r\n\r\n//   return (\r\n//     <div className=\"container\">\r\n//       <Navbar />\r\n//       <h2 className=\"mt-4\">Feedback Dashboard</h2>\r\n//       <table className=\"table table-bordered mt-3\">\r\n//         <thead className=\"table-dark\">\r\n//           <tr>\r\n//             <th>ID</th>\r\n//             <th>Feedback</th>\r\n//           </tr>\r\n//         </thead>\r\n//         <tbody>\r\n//           {feedbackList.length > 0 ? (\r\n//             feedbackList.map((item) => (\r\n//               <tr key={item.feedbackId}>\r\n//                 <td>{item.feedbackId}</td>\r\n//                 <td>{item.feedback1}</td>\r\n//               </tr>\r\n//             ))\r\n//           ) : (\r\n//             <tr>\r\n//               <td colSpan=\"2\" className=\"text-center\">\r\n//                 No feedback available.\r\n//               </td>\r\n//             </tr>\r\n//           )}\r\n//         </tbody>\r\n//       </table>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default FeedbackDashboard;\r\n//*********************************************************************************************************** */\r\n// import React, { useEffect, useState } from \"react\";\r\n// import Navbar from \"../components/Navbar\";\r\n\r\n// function FeedbackDashboard() {\r\n//   const [feedbackList, setFeedbackList] = useState([]);\r\n\r\n//   // Fetch feedback from the backend\r\n//   const fetchFeedback = async () => {\r\n//     try {\r\n//       const response = await fetch(\"https://localhost:7299/api/Feedback\");\r\n//       if (response.ok) {\r\n//         const data = await response.json();\r\n//         setFeedbackList(data);\r\n//       } else {\r\n//         console.error(\"Failed to fetch feedback\");\r\n//       }\r\n//     } catch (error) {\r\n//       console.error(\"Error fetching feedback:\", error);\r\n//     }\r\n//   };\r\n\r\n//   // Delete feedback\r\n//   const deleteFeedback = async (id) => {\r\n//     try {\r\n//       const response = await fetch(\r\n//         `https://localhost:7299/api/Feedback/${id}`,\r\n//         {\r\n//           method: \"DELETE\",\r\n//         }\r\n//       );\r\n//       if (response.ok) {\r\n//         setFeedbackList(feedbackList.filter((item) => item.feedbackId !== id));\r\n//       } else {\r\n//         console.error(\"Failed to delete feedback\");\r\n//       }\r\n//     } catch (error) {\r\n//       console.error(\"Error deleting feedback:\", error);\r\n//     }\r\n//   };\r\n\r\n//   useEffect(() => {\r\n//     fetchFeedback(); // Fetch feedback on component mount\r\n//   }, []);\r\n\r\n//   return (\r\n//     <div className=\"container\">\r\n//       <Navbar />\r\n//       <h2 className=\"mt-4\">Feedback Dashboard</h2>\r\n//       <table className=\"table table-bordered mt-3\">\r\n//         <thead className=\"table-dark\">\r\n//           <tr>\r\n//             <th>ID</th>\r\n//             <th>Feedback</th>\r\n//             <th>Actions</th>\r\n//           </tr>\r\n//         </thead>\r\n//         <tbody>\r\n//           {feedbackList.length > 0 ? (\r\n//             feedbackList.map((item) => (\r\n//               <tr key={item.feedbackId}>\r\n//                 <td>{item.feedbackId}</td>\r\n//                 <td>{item.feedback1}</td>\r\n//                 <td>\r\n//                   <button\r\n//                     className=\"btn btn-danger\"\r\n//                     onClick={() => deleteFeedback(item.feedbackId)}\r\n//                   >\r\n//                     Delete\r\n//                   </button>\r\n//                 </td>\r\n//               </tr>\r\n//             ))\r\n//           ) : (\r\n//             <tr>\r\n//               <td colSpan=\"3\" className=\"text-center\">\r\n//                 No feedback available.\r\n//               </td>\r\n//             </tr>\r\n//           )}\r\n//         </tbody>\r\n//       </table>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default FeedbackDashboard;\r\n//************************************************************************************************************* */\r\n"],"mappingsignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}