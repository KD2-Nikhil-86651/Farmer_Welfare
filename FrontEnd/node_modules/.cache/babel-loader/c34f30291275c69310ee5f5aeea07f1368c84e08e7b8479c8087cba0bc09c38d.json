{"ast":null,"code":"import axios from \"axios\";\nconst API_URL = \"https://localhost:7299/api/Crops\"; // Adjust this based on your backend\n\n// ✅ Get all crops\nexport async function getCrops() {\n  try {\n    const response = await axios.get(`${API_URL}`);\n    return response.data.data; // Returns crop list\n  } catch (error) {\n    var _error$response, _error$response2;\n    console.error(\"Error fetching crops:\", ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || error);\n    throw ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.data) || error;\n  }\n}\n\n// ✅ Update crop rate (Admin only)\nexport async function updateCropRate(cropId, newRate, adminUser) {\n  try {\n    const response = await axios.post(`${API_URL}/update-rate`, {\n      CropId: cropId,\n      NewRate: newRate,\n      AdminUser: adminUser\n    });\n    return response.data;\n  } catch (error) {\n    var _error$response3, _error$response4;\n    console.error(\"Error updating crop rate:\", ((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : _error$response3.data) || error);\n    throw ((_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : _error$response4.data) || error;\n  }\n}\n\n// ✅ Get crop rate history\nexport async function getCropRateHistory(cropId) {\n  try {\n    const response = await axios.get(`${API_URL}/rate-history/${cropId}`);\n    return response.data.data; // Returns history list\n  } catch (error) {\n    var _error$response5, _error$response6;\n    console.error(\"Error fetching rate history:\", ((_error$response5 = error.response) === null || _error$response5 === void 0 ? void 0 : _error$response5.data) || error);\n    throw ((_error$response6 = error.response) === null || _error$response6 === void 0 ? void 0 : _error$response6.data) || error;\n  }\n}","map":{"version":3,"names":["axios","API_URL","getCrops","response","get","data","error","_error$response","_error$response2","console","updateCropRate","cropId","newRate","adminUser","post","CropId","NewRate","AdminUser","_error$response3","_error$response4","getCropRateHistory","_error$response5","_error$response6"],"sources":["D:/Nikhil/Downloads/CDAC Project/FarmerFrontend/src/service/CropService.js"],"sourcesContent":["import axios from \"axios\";\r\n\r\nconst API_URL = \"https://localhost:7299/api/Crops\"; // Adjust this based on your backend\r\n\r\n// ✅ Get all crops\r\nexport async function getCrops() {\r\n  try {\r\n    const response = await axios.get(`${API_URL}`);\r\n    return response.data.data; // Returns crop list\r\n  } catch (error) {\r\n    console.error(\"Error fetching crops:\", error.response?.data || error);\r\n    throw error.response?.data || error;\r\n  }\r\n}\r\n\r\n// ✅ Update crop rate (Admin only)\r\nexport async function updateCropRate(cropId, newRate, adminUser) {\r\n  try {\r\n    const response = await axios.post(`${API_URL}/update-rate`, {\r\n      CropId: cropId,\r\n      NewRate: newRate,\r\n      AdminUser: adminUser,\r\n    });\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(\"Error updating crop rate:\", error.response?.data || error);\r\n    throw error.response?.data || error;\r\n  }\r\n}\r\n\r\n// ✅ Get crop rate history\r\nexport async function getCropRateHistory(cropId) {\r\n  try {\r\n    const response = await axios.get(`${API_URL}/rate-history/${cropId}`);\r\n    return response.data.data; // Returns history list\r\n  } catch (error) {\r\n    console.error(\"Error fetching rate history:\", error.response?.data || error);\r\n    throw error.response?.data || error;\r\n  }\r\n}\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,OAAO,GAAG,kCAAkC,CAAC,CAAC;;AAEpD;AACA,OAAO,eAAeC,QAAQA,CAAA,EAAG;EAC/B,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMH,KAAK,CAACI,GAAG,CAAC,GAAGH,OAAO,EAAE,CAAC;IAC9C,OAAOE,QAAQ,CAACE,IAAI,CAACA,IAAI,CAAC,CAAC;EAC7B,CAAC,CAAC,OAAOC,KAAK,EAAE;IAAA,IAAAC,eAAA,EAAAC,gBAAA;IACdC,OAAO,CAACH,KAAK,CAAC,uBAAuB,EAAE,EAAAC,eAAA,GAAAD,KAAK,CAACH,QAAQ,cAAAI,eAAA,uBAAdA,eAAA,CAAgBF,IAAI,KAAIC,KAAK,CAAC;IACrE,MAAM,EAAAE,gBAAA,GAAAF,KAAK,CAACH,QAAQ,cAAAK,gBAAA,uBAAdA,gBAAA,CAAgBH,IAAI,KAAIC,KAAK;EACrC;AACF;;AAEA;AACA,OAAO,eAAeI,cAAcA,CAACC,MAAM,EAAEC,OAAO,EAAEC,SAAS,EAAE;EAC/D,IAAI;IACF,MAAMV,QAAQ,GAAG,MAAMH,KAAK,CAACc,IAAI,CAAC,GAAGb,OAAO,cAAc,EAAE;MAC1Dc,MAAM,EAAEJ,MAAM;MACdK,OAAO,EAAEJ,OAAO;MAChBK,SAAS,EAAEJ;IACb,CAAC,CAAC;IACF,OAAOV,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IAAA,IAAAY,gBAAA,EAAAC,gBAAA;IACdV,OAAO,CAACH,KAAK,CAAC,2BAA2B,EAAE,EAAAY,gBAAA,GAAAZ,KAAK,CAACH,QAAQ,cAAAe,gBAAA,uBAAdA,gBAAA,CAAgBb,IAAI,KAAIC,KAAK,CAAC;IACzE,MAAM,EAAAa,gBAAA,GAAAb,KAAK,CAACH,QAAQ,cAAAgB,gBAAA,uBAAdA,gBAAA,CAAgBd,IAAI,KAAIC,KAAK;EACrC;AACF;;AAEA;AACA,OAAO,eAAec,kBAAkBA,CAACT,MAAM,EAAE;EAC/C,IAAI;IACF,MAAMR,QAAQ,GAAG,MAAMH,KAAK,CAACI,GAAG,CAAC,GAAGH,OAAO,iBAAiBU,MAAM,EAAE,CAAC;IACrE,OAAOR,QAAQ,CAACE,IAAI,CAACA,IAAI,CAAC,CAAC;EAC7B,CAAC,CAAC,OAAOC,KAAK,EAAE;IAAA,IAAAe,gBAAA,EAAAC,gBAAA;IACdb,OAAO,CAACH,KAAK,CAAC,8BAA8B,EAAE,EAAAe,gBAAA,GAAAf,KAAK,CAACH,QAAQ,cAAAkB,gBAAA,uBAAdA,gBAAA,CAAgBhB,IAAI,KAAIC,KAAK,CAAC;IAC5E,MAAM,EAAAgB,gBAAA,GAAAhB,KAAK,CAACH,QAAQ,cAAAmB,gBAAA,uBAAdA,gBAAA,CAAgBjB,IAAI,KAAIC,KAAK;EACrC;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}