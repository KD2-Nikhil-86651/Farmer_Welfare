{"ast":null,"code":"// import axios from \"axios\";\n// import { createUrl, createError } from \"./util\";\n\n// export async function registerBuyer(\n//   FirstName,\n//   LastName,\n//   ContactNo,\n//   Email,\n//   Password\n// ) {\n//   try {\n//     const url = createUrl(\"api/Buyer/Registration\");\n//     const body = { FirstName, LastName, ContactNo, Email, Password };\n//     console.log(\"Sending request to:\", url, body);\n\n//     const response = await axios.post(url, body);\n//     console.log(\"Response received:\", response.data); // Debugging\n\n//     return response.data; // Ensure backend is returning JSON with \"status\"\n//   } catch (ex) {\n//     console.error(\"API Error:\", ex.response?.data || ex.message);\n//     return {\n//       status: \"error\",\n//       error: ex.response?.data?.error || \"Something went wrong\",\n//     };\n//   }\n// }\n\nimport axios from \"axios\";\nimport { createUrl } from \"./util\"; // Ensure createUrl is implemented correctly\n\nexport async function registerBuyer({\n  FirstName,\n  LastName,\n  ContactNo,\n  Email,\n  Password\n}) {\n  try {\n    // ✅ Ensure required fields are provided\n    if (!FirstName || !LastName || !ContactNo || !Email || !Password) {\n      return {\n        status: \"error\",\n        error: \"All fields are required.\"\n      };\n    }\n\n    // ✅ Ensure the contact number is exactly 10 digits\n    if (!/^\\d{10}$/.test(ContactNo)) {\n      return {\n        status: \"error\",\n        error: \"Contact number must be 10 digits long.\"\n      };\n    }\n\n    // ✅ Ensure the password is at least 6 characters long\n    if (Password.length < 6) {\n      return {\n        status: \"error\",\n        error: \"Password must be at least 6 characters long.\"\n      };\n    }\n    const url = createUrl(\"api/Buyer/Registration\");\n\n    // ✅ Add `CategoryId` if required by the API\n    const body = {\n      FirstName,\n      LastName,\n      ContactNo,\n      Email,\n      Password,\n      CategoryId: 1 // Set default CategoryId (adjust if necessary)\n    };\n    console.log(\"Sending request to:\", url, body); // Debugging\n\n    const response = await axios.post(url, body, {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      } // ✅ Ensure correct headers\n    });\n    console.log(\"Response received:\", response.data); // Debugging\n\n    return response.data;\n  } catch (ex) {\n    var _ex$response, _ex$response2, _ex$response2$data;\n    console.error(\"API Error:\", ((_ex$response = ex.response) === null || _ex$response === void 0 ? void 0 : _ex$response.data) || ex.message);\n    return {\n      status: \"error\",\n      error: ((_ex$response2 = ex.response) === null || _ex$response2 === void 0 ? void 0 : (_ex$response2$data = _ex$response2.data) === null || _ex$response2$data === void 0 ? void 0 : _ex$response2$data.error) || \"Something went wrong. Please try again.\"\n    };\n  }\n}","map":{"version":3,"names":["axios","createUrl","registerBuyer","FirstName","LastName","ContactNo","Email","Password","status","error","test","length","url","body","CategoryId","console","log","response","post","headers","data","ex","_ex$response","_ex$response2","_ex$response2$data","message"],"sources":["D:/Nikhil/Downloads/CDAC Project/FarmerFrontend/src/service/Buyer.js"],"sourcesContent":["// import axios from \"axios\";\r\n// import { createUrl, createError } from \"./util\";\r\n\r\n// export async function registerBuyer(\r\n//   FirstName,\r\n//   LastName,\r\n//   ContactNo,\r\n//   Email,\r\n//   Password\r\n// ) {\r\n//   try {\r\n//     const url = createUrl(\"api/Buyer/Registration\");\r\n//     const body = { FirstName, LastName, ContactNo, Email, Password };\r\n//     console.log(\"Sending request to:\", url, body);\r\n\r\n//     const response = await axios.post(url, body);\r\n//     console.log(\"Response received:\", response.data); // Debugging\r\n\r\n//     return response.data; // Ensure backend is returning JSON with \"status\"\r\n//   } catch (ex) {\r\n//     console.error(\"API Error:\", ex.response?.data || ex.message);\r\n//     return {\r\n//       status: \"error\",\r\n//       error: ex.response?.data?.error || \"Something went wrong\",\r\n//     };\r\n//   }\r\n// }\r\n\r\n\r\n\r\nimport axios from \"axios\";\r\nimport { createUrl } from \"./util\"; // Ensure createUrl is implemented correctly\r\n\r\nexport async function registerBuyer({ FirstName, LastName, ContactNo, Email, Password }) {\r\n  try {\r\n    // ✅ Ensure required fields are provided\r\n    if (!FirstName || !LastName || !ContactNo || !Email || !Password) {\r\n      return { status: \"error\", error: \"All fields are required.\" };\r\n    }\r\n\r\n    // ✅ Ensure the contact number is exactly 10 digits\r\n    if (!/^\\d{10}$/.test(ContactNo)) {\r\n      return { status: \"error\", error: \"Contact number must be 10 digits long.\" };\r\n    }\r\n\r\n    // ✅ Ensure the password is at least 6 characters long\r\n    if (Password.length < 6) {\r\n      return { status: \"error\", error: \"Password must be at least 6 characters long.\" };\r\n    }\r\n\r\n    const url = createUrl(\"api/Buyer/Registration\");\r\n\r\n    // ✅ Add `CategoryId` if required by the API\r\n    const body = {\r\n      FirstName,\r\n      LastName,\r\n      ContactNo,\r\n      Email,\r\n      Password,\r\n      CategoryId: 1, // Set default CategoryId (adjust if necessary)\r\n    };\r\n\r\n    console.log(\"Sending request to:\", url, body); // Debugging\r\n\r\n    const response = await axios.post(url, body, {\r\n      headers: { \"Content-Type\": \"application/json\" }, // ✅ Ensure correct headers\r\n    });\r\n\r\n    console.log(\"Response received:\", response.data); // Debugging\r\n\r\n    return response.data;\r\n  } catch (ex) {\r\n    console.error(\"API Error:\", ex.response?.data || ex.message);\r\n    return {\r\n      status: \"error\",\r\n      error: ex.response?.data?.error || \"Something went wrong. Please try again.\",\r\n    };\r\n  }\r\n}\r\n"],"mappings":"AAAA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAIA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,QAAQ,QAAQ,CAAC,CAAC;;AAEpC,OAAO,eAAeC,aAAaA,CAAC;EAAEC,SAAS;EAAEC,QAAQ;EAAEC,SAAS;EAAEC,KAAK;EAAEC;AAAS,CAAC,EAAE;EACvF,IAAI;IACF;IACA,IAAI,CAACJ,SAAS,IAAI,CAACC,QAAQ,IAAI,CAACC,SAAS,IAAI,CAACC,KAAK,IAAI,CAACC,QAAQ,EAAE;MAChE,OAAO;QAAEC,MAAM,EAAE,OAAO;QAAEC,KAAK,EAAE;MAA2B,CAAC;IAC/D;;IAEA;IACA,IAAI,CAAC,UAAU,CAACC,IAAI,CAACL,SAAS,CAAC,EAAE;MAC/B,OAAO;QAAEG,MAAM,EAAE,OAAO;QAAEC,KAAK,EAAE;MAAyC,CAAC;IAC7E;;IAEA;IACA,IAAIF,QAAQ,CAACI,MAAM,GAAG,CAAC,EAAE;MACvB,OAAO;QAAEH,MAAM,EAAE,OAAO;QAAEC,KAAK,EAAE;MAA+C,CAAC;IACnF;IAEA,MAAMG,GAAG,GAAGX,SAAS,CAAC,wBAAwB,CAAC;;IAE/C;IACA,MAAMY,IAAI,GAAG;MACXV,SAAS;MACTC,QAAQ;MACRC,SAAS;MACTC,KAAK;MACLC,QAAQ;MACRO,UAAU,EAAE,CAAC,CAAE;IACjB,CAAC;IAEDC,OAAO,CAACC,GAAG,CAAC,qBAAqB,EAAEJ,GAAG,EAAEC,IAAI,CAAC,CAAC,CAAC;;IAE/C,MAAMI,QAAQ,GAAG,MAAMjB,KAAK,CAACkB,IAAI,CAACN,GAAG,EAAEC,IAAI,EAAE;MAC3CM,OAAO,EAAE;QAAE,cAAc,EAAE;MAAmB,CAAC,CAAE;IACnD,CAAC,CAAC;IAEFJ,OAAO,CAACC,GAAG,CAAC,oBAAoB,EAAEC,QAAQ,CAACG,IAAI,CAAC,CAAC,CAAC;;IAElD,OAAOH,QAAQ,CAACG,IAAI;EACtB,CAAC,CAAC,OAAOC,EAAE,EAAE;IAAA,IAAAC,YAAA,EAAAC,aAAA,EAAAC,kBAAA;IACXT,OAAO,CAACN,KAAK,CAAC,YAAY,EAAE,EAAAa,YAAA,GAAAD,EAAE,CAACJ,QAAQ,cAAAK,YAAA,uBAAXA,YAAA,CAAaF,IAAI,KAAIC,EAAE,CAACI,OAAO,CAAC;IAC5D,OAAO;MACLjB,MAAM,EAAE,OAAO;MACfC,KAAK,EAAE,EAAAc,aAAA,GAAAF,EAAE,CAACJ,QAAQ,cAAAM,aAAA,wBAAAC,kBAAA,GAAXD,aAAA,CAAaH,IAAI,cAAAI,kBAAA,uBAAjBA,kBAAA,CAAmBf,KAAK,KAAI;IACrC,CAAC;EACH;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}