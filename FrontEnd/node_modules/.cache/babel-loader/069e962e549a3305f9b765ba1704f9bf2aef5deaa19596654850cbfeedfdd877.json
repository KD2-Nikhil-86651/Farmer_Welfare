{"ast":null,"code":"var _jsxFileName = \"D:\\\\Nikhil\\\\Downloads\\\\CDAC Project\\\\FarmerFrontend\\\\src\\\\screens\\\\MarketRates.jsx\",\n  _s = $RefreshSig$();\n// import React, { useEffect, useState } from \"react\";\n// import axios from \"axios\";\n// import Navbar from \"../components/Navbar\";\n\n// const MarketRates = () => {\n//   const [crops, setCrops] = useState([]);\n\n//   useEffect(() => {\n//     axios\n//       .get(\"http://localhost:7299/api/crops\") // Adjust the URL as per backend setup\n//       .then((response) => setCrops(response.data))\n//       .catch((error) => console.error(\"Error fetching crops:\", error));\n//   }, []);\n\n//   return (\n//     <div>\n//       <Navbar />\n//       <div\n//         className=\"card shadow-sm\"\n//         style={{ maxWidth: \"600px\", margin: \"0 auto\", marginTop: \"20px\" }}\n//       >\n//         <div className=\"card-body\">\n//           <h5 className=\"card-title text-center mb-4\" style={{ color: \"#333\" }}>\n//             Market Rates (₹ per Kg)\n//           </h5>\n//           <table className=\"table table-bordered text-center\">\n//             <thead className=\"thead-light\">\n//               <tr>\n//                 <th>Crop</th>\n//                 <th>Rate per Kg (₹)</th>\n//               </tr>\n//             </thead>\n//             <tbody>\n//               {crops.length > 0 ? (\n//                 crops.map((crop) => (\n//                   <tr key={crop.cropId}>\n//                     <td>{crop.cropName}</td>\n//                     <td>₹{crop.rate}/kg</td>\n//                   </tr>\n//                 ))\n//               ) : (\n//                 <tr>\n//                   <td colSpan=\"2\">Loading...</td>\n//                 </tr>\n//               )}\n//             </tbody>\n//           </table>\n//         </div>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default MarketRates;\n\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport Navbar from \"../components/Navbar\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MarketRates = () => {\n  _s();\n  const [crops, setCrops] = useState([]);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    axios.get(\"http://localhost:7299/api/Crops\") // Make sure this matches your Swagger URL\n    .then(response => {\n      console.log(\"API Response:\", response.data);\n      setCrops(response.data);\n    }).catch(error => {\n      console.error(\"Error fetching crops:\", error);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card shadow-sm\",\n      style: {\n        maxWidth: \"600px\",\n        margin: \"0 auto\",\n        marginTop: \"20px\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-body\",\n        children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n          className: \"card-title text-center mb-4\",\n          style: {\n            color: \"#333\"\n          },\n          children: \"Market Rates (\\u20B9 per Kg)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this), error ? /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-danger text-center\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"table table-bordered text-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            className: \"thead-light\",\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Crop\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 93,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Rate per Kg (\\u20B9)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 94,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: crops.length > 0 ? crops.map(crop => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: crop.cropName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 101,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [\"\\u20B9\", crop.rate, \"/kg\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 102,\n                columnNumber: 23\n              }, this)]\n            }, crop.cropId, true, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 21\n            }, this)) : /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: /*#__PURE__*/_jsxDEV(\"td\", {\n                colSpan: \"2\",\n                children: \"Loading...\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 107,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n};\n_s(MarketRates, \"rExnGiUodu3EZgknAI5O4pKUqcU=\");\n_c = MarketRates;\nexport default MarketRates;\nvar _c;\n$RefreshReg$(_c, \"MarketRates\");","map":{"version":3,"names":["React","useEffect","useState","axios","Navbar","jsxDEV","_jsxDEV","MarketRates","_s","crops","setCrops","error","setError","get","then","response","console","log","data","catch","children","fileName","_jsxFileName","lineNumber","columnNumber","className","style","maxWidth","margin","marginTop","color","length","map","crop","cropName","rate","cropId","colSpan","_c","$RefreshReg$"],"sources":["D:/Nikhil/Downloads/CDAC Project/FarmerFrontend/src/screens/MarketRates.jsx"],"sourcesContent":["// import React, { useEffect, useState } from \"react\";\r\n// import axios from \"axios\";\r\n// import Navbar from \"../components/Navbar\";\r\n\r\n// const MarketRates = () => {\r\n//   const [crops, setCrops] = useState([]);\r\n\r\n//   useEffect(() => {\r\n//     axios\r\n//       .get(\"http://localhost:7299/api/crops\") // Adjust the URL as per backend setup\r\n//       .then((response) => setCrops(response.data))\r\n//       .catch((error) => console.error(\"Error fetching crops:\", error));\r\n//   }, []);\r\n\r\n//   return (\r\n//     <div>\r\n//       <Navbar />\r\n//       <div\r\n//         className=\"card shadow-sm\"\r\n//         style={{ maxWidth: \"600px\", margin: \"0 auto\", marginTop: \"20px\" }}\r\n//       >\r\n//         <div className=\"card-body\">\r\n//           <h5 className=\"card-title text-center mb-4\" style={{ color: \"#333\" }}>\r\n//             Market Rates (₹ per Kg)\r\n//           </h5>\r\n//           <table className=\"table table-bordered text-center\">\r\n//             <thead className=\"thead-light\">\r\n//               <tr>\r\n//                 <th>Crop</th>\r\n//                 <th>Rate per Kg (₹)</th>\r\n//               </tr>\r\n//             </thead>\r\n//             <tbody>\r\n//               {crops.length > 0 ? (\r\n//                 crops.map((crop) => (\r\n//                   <tr key={crop.cropId}>\r\n//                     <td>{crop.cropName}</td>\r\n//                     <td>₹{crop.rate}/kg</td>\r\n//                   </tr>\r\n//                 ))\r\n//               ) : (\r\n//                 <tr>\r\n//                   <td colSpan=\"2\">Loading...</td>\r\n//                 </tr>\r\n//               )}\r\n//             </tbody>\r\n//           </table>\r\n//         </div>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default MarketRates;\r\n\r\nimport React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport Navbar from \"../components/Navbar\";\r\n\r\nconst MarketRates = () => {\r\n  const [crops, setCrops] = useState([]);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(\"http://localhost:7299/api/Crops\") // Make sure this matches your Swagger URL\r\n      .then((response) => {\r\n        console.log(\"API Response:\", response.data);\r\n        setCrops(response.data);\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error fetching crops:\", error);\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <Navbar />\r\n      <div\r\n        className=\"card shadow-sm\"\r\n        style={{ maxWidth: \"600px\", margin: \"0 auto\", marginTop: \"20px\" }}\r\n      >\r\n        <div className=\"card-body\">\r\n          <h5 className=\"card-title text-center mb-4\" style={{ color: \"#333\" }}>\r\n            Market Rates (₹ per Kg)\r\n          </h5>\r\n          {error ? (\r\n            <p className=\"text-danger text-center\">{error}</p>\r\n          ) : (\r\n            <table className=\"table table-bordered text-center\">\r\n              <thead className=\"thead-light\">\r\n                <tr>\r\n                  <th>Crop</th>\r\n                  <th>Rate per Kg (₹)</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {crops.length > 0 ? (\r\n                  crops.map((crop) => (\r\n                    <tr key={crop.cropId}>\r\n                      <td>{crop.cropName}</td>\r\n                      <td>₹{crop.rate}/kg</td>\r\n                    </tr>\r\n                  ))\r\n                ) : (\r\n                  <tr>\r\n                    <td colSpan=\"2\">Loading...</td>\r\n                  </tr>\r\n                )}\r\n              </tbody>\r\n            </table>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MarketRates;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}